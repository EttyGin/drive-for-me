#!/usr/bin/env python3

import re

def find_matching_words(pattern, include, exclude) -> None:
    res: str = ""
    with open(r"/usr/share/dict/words", "r") as word_file:
        for line in word_file:
            word: str = line.strip().lower()
            if (
            re.match(f"^{pattern}$", word)
            and word.isalpha()
            and all(letter in word for letter in include)
            and all(letter not in word for letter in exclude)
        ):
                res += word + "\n"
    print(res)
    
if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("pattern", type=str, help="a pattern")
    parser.add_argument("-i", "--include", action="append", help="letters to include")
    parser.add_argument("-e", "--exclude", action="append", help="letters to exclude")
    
    args = parser.parse_args()
   
    include_str = "".join(args.include) if args.include else ""
    exclude_str = "".join(args.exclude) if args.exclude else ""

    find_matching_words(args.pattern, include_str, exclude_str)    